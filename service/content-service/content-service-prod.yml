# content-service : dev
server:
  port: 8082

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://202.178.125.77:9090
  data:
    mongodb:
      uri: mongodb://202.178.125.77:5403/content-service
    # mongodb:
    #   uri: mongodb://admin:Code%40Advisors2024@202.178.125.77:5403/
    #   authentication-database: admin
    #   database: content-service
  # data:
  #   mongodb:
  #     uri: mongodb://localhost:27017/content-service
  kafka:
    bootstrap-servers:
      - 167.172.78.79:29093
      - 167.172.78.79:39093
      - 167.172.78.79:49093

      # - 167.172.78.79:9092
      # - 167.172.78.79:9093
      # - 167.172.78.79:9094
    # consumer:
    #   group-id: content-service
    #   auto-offset-reset: latest
    #   # key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    #   key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    #   value-deserializer: co.istad.content_service.config.kafka.BaseProducerDeserializer
    #   properties:
    #     spring.json.trusted.packages: "*"
    consumer:
      enable-auto-commit: true
      group-id: content-service
      auto-offset-reset: latest
      key-deseri7alizer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: co.istad.content_service.config.kafka.BaseProducerDeserializer
      #      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        ##        spring.json.value.default.type: istad.codeadvisor.userservice.config.kafka.producer.ContentProducer
        spring.json.value.default.type: co.istad.content_service.config.kafka.BaseProducer

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.trusted.packages: "*"
    security:
      protocol: SSL
    ssl:
      trust-store-location: file:/app/kafka.server.truststore.jks
      trust-store-password: password123
      key-store-location: file:/app/kafka.server.keystore.jks
      key-store-password: password123
      key-password: password123

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://202.178.125.77:1761eureka/
#logging:
#  level:
#    org:
#      springframework:
#        kafka: debug

